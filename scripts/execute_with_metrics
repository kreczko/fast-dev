#!/usr/bin/env python
'''
for testing install 'stress' package and run
./scripts/execute_with_metrics stress --cpu 1 --io 1 --vm 1 --vm-bytes 128M --timeout 10s --verbose
'''
from __future__ import print_function
import subprocess
import sys
import resource

def execute(cmd):
    popen = subprocess.Popen(cmd, stdout=subprocess.PIPE, universal_newlines=True)
    for stdout_line in iter(popen.stdout.readline, ""):
        yield stdout_line
    popen.stdout.close()
    return_code = popen.wait()
    if return_code:
        raise subprocess.CalledProcessError(return_code, cmd)

command = sys.argv[1:]
usage_start = resource.getrusage(resource.RUSAGE_CHILDREN)
for line in execute(command):
    print(line, end="")
usage_end = resource.getrusage(resource.RUSAGE_CHILDREN)

max_rss_in_MB = (usage_end.ru_maxrss - usage_start.ru_maxrss) / 1024.
metrics = dict(
    cpu_time_in_s=round(usage_end.ru_utime - usage_start.ru_utime, 1),
    max_rss_in_MB=round(max_rss_in_MB, 1),
    command=' '.join(command),
)

msg = [
    '>>> Ran command: "{command}"',
    '>>> in {cpu_time_in_s}s and used {max_rss_in_MB} MB of memory.'
]
msg = '\n'.join(msg)
print(msg.format(**metrics))
